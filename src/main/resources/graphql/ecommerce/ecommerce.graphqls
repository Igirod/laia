#import "./ecommerce/product.graphqls"
#import "./ecommerce/productdetail.graphqls"
#import "./ecommerce/merchant.graphqls"
#import "./ecommerce/payment.graphqls"
#import "./ecommerce/imageproduct.graphqls"
#import "./ecommerce/invoice.graphqls"
#import "./ecommerce/user.graphqls"
#import "./ecommerce/shoppingcart.graphqls"
#import "./ecommerce/shoppingcartproduct.graphqls"

type Query {
   merchantS(slug: String!): MerchantDTO
   productId(productId: Int!): ProductDTO
   products(page: Int!, merchantId: Int!, status: Int): [ProductDTO]
   productDId(productId: Int!): [ProductDetailDTO]
   merchantId(merchantId: Int!): MerchantDTO
   payments(page: Int!): [PaymentDTO]
   imagesPId(productId: Int!): [ImageProductDTO]
   invoices(page: Int!, merchantId: Int!, userEmail: String, invoiceStatus: InvoiceStatus): [InvoiceDTO]
   productsTf(page: Int!, typeFilter: TypeFilter): [ProductDTO]
   productDSId(productId: Int!): ProductDetailShortDTO
   gCart(merchantId: Int!, userId: Int!): ShoppingCartDTO
}

type Mutation {
   cInvoice(invoiceInputDTO: InvoiceInputDTO!): InvoiceDTO
   uInvoice(invoiceInputDTO: InvoiceInputDTO!): InvoiceDTO
   aSCartP(shoppingCartId: Int!, productId: Int!) : ShoppingCartProductDTO
}